#This Playbook contains the adjustments for the background tasks node

- name: Install bgnode dependencies
  apt: name={{ item }} state=present
  with_items:
    - default-jre
    - libreoffice
    - python3-uno
#poppler-utils (pdftotext)
    - poppler-utils

# new config layout?
- set_fact: new_conf_layout="{{ seafile_version | version_compare('5.0', operator='ge') }}"

# adapt seahub_settings.py
- name: Remove CONVERTOR_ROOT from seahub_settings.py
  lineinfile: dest="{{ seafile_base_dir }}{% if new_conf_layout %}/conf{% endif %}/seahub_settings.py" state=absent regexp="^OFFICE_CONVERTOR_ROOT"
- name: Add CONVERTOR_NODE to seahub_settings.py
  lineinfile: dest={{ seafile_base_dir }}{% if new_conf_layout %}/conf{% endif %}/seahub_settings.py state=present line="OFFICE_CONVERTOR_NODE = True"

# rollout background init.d script
- name: Create init.d script
  template: >
    src=init-seafile-server.j2
    dest=/etc/init.d/seafile-server
    owner=root
    group=root
    mode=0755

# rollout background systemd service
- name: Create systemd service
  template: >
    src=seafile-server.service.j2
    dest=/etc/systemd/system/seafile-server.service
    owner=root
    group=root
    mode=0755

#rollout custom webserver config
#depends on existing webserver node rollout
- name: Configure nginx seafile conf
  template: src=seafile_nginx.j2 dest=/etc/nginx/sites-available/seafile
  when: webserver == "nginx"
  notify:
  - Reload nginx

- name: Configure apache seafile.conf
  template: src=seafile_apache.j2 dest=/etc/apache2/sites-available/seafile.conf
  when: webserver == "apache"
  notify:
  - Restart apache

- include_vars: dbconfig.yml
- name: configure seafevents.conf
  template: src=seafevents.conf.j2 dest="{{ seafile_base_dir }}/{% if new_conf_layout %}/conf{% else %}pro-data{% endif %}/seafevents.conf"

# make libreoffice office converter work with non-root account (control location of soffice working dir)
- name: set soffice home
  lineinfile: >
    name="{{ seafile_base_dir }}/seafile-server-latest/seafile-background-tasks.sh"
    insertafter="^export SEAFILE_LD_LIBRARY_PATH"
    line="export HOME=${TOPDIR}/{{ soffice_home }}/"

# chown background working dirs to seafile_user, if needed
# additionally: create soffice home dir
- name: test seafile_user chown
  file: >
    path="{{ seafile_base_dir }}/{{ soffice_home }}"
    owner={{ seafile_user|default('root') }}
    state=directory
  register: output_chown
# chown the rest, if seafile_user changed
- name: recursively chown working dirs
  shell: "chown -R {{ seafile_user|default('root') }} {{ item }}"
  with_items:
    - "/tmp/seafile-office-output"
    - "{{ seafile_base_dir }}/{{ soffice_home }}"
  when: output_chown.changed

- name: restart seafile-background-tasks
  service: name=seafile-server state=restarted
