- name: "apache: install package"
  apt: name=apache2 state=present

# Apache2 fastcgi support
- name: "apache: enable multiverse support for fastcgi"
  apt_repository: repo="{{item}}" update_cache=false
  register: multiverse_installed
  when: ansible_distribution == 'Ubuntu'
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'

- apt:
    update_cache: true
  when: multiverse_installed | changed

- name: "apache: install fastcgi support"
  apt: name=libapache2-mod-fastcgi state=present

- name: "apache: enable needed modules"
  apache2_module: name={{ item }} state=present
  with_items:
    - rewrite
    - fastcgi
    - proxy_http
    - ssl
    # for HSTS Header
    - headers
  notify:
  - Restart apache

- name: "apache: configure fastcgi for seahub"
  lineinfile: >
    dest=/etc/apache2/apache2.conf
    line="FastCGIExternalServer /var/www/html/seahub.fcgi -idle-timeout {{ fastcgi_timeout }} -host 127.0.0.1:8000"
    state=present
    insertafter=EOF
    regexp="FastCGIExternalServer.*seahub.fcgi"

- name: "apache: configure fastcgi for seafdav"
  lineinfile: >
    dest=/etc/apache2/apache2.conf
    line="FastCGIExternalServer /var/www/html/seafdav.fcgi -host 127.0.0.1:8080"
    state=present
    insertafter=EOF
    regexp="FastCGIExternalServer.*seafdav.fcgi"

- name: "apache: Configure seafile.conf"
  template: src=seafile_apache.j2 dest=/etc/apache2/sites-available/seafile.conf
  notify:
  - Restart apache

- name: "apache: enable seafile site"
  command: a2ensite seafile creates=/etc/apache2/sites-enabled/seafile.conf
  notify:
  - Restart apache

- name: "apache: disable default site"
  file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
  notify:
  - Restart apache

- name: "apache: install certificate"
  copy: src={{ item }} dest=/etc/ssl/ owner=root group=root
  with_items:
    - ssl/seafile-cert.pem
    - ssl/seafile-chain.pem
    - ssl/seafile-key.pem
  when: ssl_nodes or use_shibboleth
  notify:
  - Restart apache
  - Restart shibd
