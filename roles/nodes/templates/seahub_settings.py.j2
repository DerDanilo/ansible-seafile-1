SECRET_KEY = "{{ seahub_secret }}"

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '{{ db_seahub }}',
        'USER': '{{ db_user }}',
        'PASSWORD': '{{ db_pw }}',
        'HOST': '{{ db_server }}',
        'PORT': '{{ db_port }}',
        'OPTIONS': {
            'init_command': 'SET storage_engine=INNODB',
        }
    }
}

FILE_SERVER_ROOT = 'https://{{ server_name }}/seafhttp'


CACHES = {
    'default': {
        'BACKEND': '{{ memcached_backends[memcached_backend]['django_backend'] }}',
        'LOCATION': [
{% if memcached_servers is defined %}
{% for server in memcached_servers %}
            '{{ server }}:11211',
{% endfor %}
{% else %}
{% for server in groups['memcached'] %}
            '{{ hostvars[server]['ansible_default_ipv4']['address'] }}:11211',
{% endfor %}
{% endif %}
        ]
    }
}

OFFICE_CONVERTOR_ROOT = 'http://{{ bg_server }}'

{% if libreoffice_webapp %}
# Enable LibreOffice Online
ENABLE_OFFICE_WEB_APP = True

# Url of LibreOffice Online's discovery page
# The discovery page tells Seafile how to interact with LibreOffice Online when view file online
# You should change `https://example.LibreOffice-online:9980/hosting/discovery` to your actual LibreOffice Online server address
OFFICE_WEB_APP_BASE_URL = '{{ libreoffice_webapp_base_url }}'

# Expiration of WOPI access token
# WOPI access token is a string used by Seafile to determine the file's
# identity and permissions when use LibreOffice Online view it online
# And for security reason, this token should expire after a set time period
WOPI_ACCESS_TOKEN_EXPIRATION = 30 * 60   # seconds

# List of file formats that you want to view through LibreOffice Online
# You can change this value according to your preferences
# And of course you should make sure your LibreOffice Online supports to preview
# the files with the specified extensions
OFFICE_WEB_APP_FILE_EXTENSION = ('ods', 'xls', 'xlsb', 'xlsm', 'xlsx','ppsx', 'ppt',
    'pptm', 'pptx', 'doc', 'docm', 'docx')

# Enable edit files through LibreOffice Online
ENABLE_OFFICE_WEB_APP_EDIT = True

# types of files should be editable through LibreOffice Online
OFFICE_WEB_APP_EDIT_FILE_EXTENSION = ('ods', 'xls', 'xlsb', 'xlsm', 'xlsx','ppsx', 'ppt',
    'pptm', 'pptx', 'doc', 'docm', 'docx')
{% endif %}

AVATAR_FILE_STORAGE = 'seahub.base.database_storage.DatabaseStorage'

# COMPRESS backend for cluster with memcached
COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem.LocMemCache'

{% if thumbnail_options %}
# Enable or disable thumbnails
ENABLE_THUMBNAIL = {{ thumbnail_options }}
# Absolute filesystem path to the directory that will hold thumbnail files.
THUMBNAIL_ROOT = '{{ thumbnail_root }}'
THUMBNAIL_EXTENSION = '{{ thumbnail_extension }}'
# new 4.3 settings (before 4.3 these were strings)
THUMBNAIL_DEFAULT_SIZE = {{ thumbnail_default_size }}
PREVIEW_DEFAULT_SIZE = {{ thumbnail_preview_default_size }}
{% endif %}


{% if seahub_disable_throttling %}
# disable throttling
REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_RATES': {
        'ping': None,
        'anon': None,
        'user': None,
    },
}
{% endif %}

{% if email %}
EMAIL_USE_TLS = {{ email_use_tls }}
EMAIL_HOST = '{{ email_host }}' # smpt server
EMAIL_HOST_USER = '{{ email_host_user }}'   # username and domain
EMAIL_HOST_PASSWORD = '{{ email_host_password }}'    # password
EMAIL_PORT = '{{ email_port }}'
DEFAULT_FROM_EMAIL = '{{ email_default_from }}'
{% if email_server_email is defined %}
SERVER_EMAIL = '{{ email_server_email }}'
{% endif %}
# Whether to send email when a system admin adding a new member. Default is `True`.
# NOTE: since version 1.4.
SEND_EMAIL_ON_ADDING_SYSTEM_MEMBER = {{ email_on_adding_system_member }}
# Whether to send email when a system admin resetting a user's password. Default is `True`.
# NOTE: since version 1.4.
SEND_EMAIL_ON_RESETTING_USER_PASSWD = {{ email_on_resetting_user_passwd }}

{% if email_replace_from_email %}
# Replace default from email with the users email address; defaults to 'False'
REPLACE_FROM_EMAIL = True
{% endif %}

{% if email_add_reply_to_header %}
# Add Reply-To header with the users email address; defaults to 'False'
ADD_REPLY_TO_HEADER = True
{% endif %}
{% endif %}

{% if ldap_cloud %}
# Enable cloude mode and hide `Organization` tab.
CLOUD_MODE = True
{% endif %}

# Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = '{{ time_zone }}'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
# Default language for sending emails.
LANGUAGE_CODE = '{{ lang_code }}'


{% if pw_options %}
# mininum length for password of encrypted library
REPO_PASSWORD_MIN_LENGTH = {{ pw_repo_min_length }}
# mininum length for user's password
USER_PASSWORD_MIN_LENGTH = {{ pw_user_min_length }}
# LEVEL based on four types of input:
# num, upper letter, lower letter, other symbols
# '3' means password must have at least 3 types of the above.
USER_PASSWORD_STRENGTH_LEVEL = {{ pw_strength_level }}
# default False, only check USER_PASSWORD_MIN_LENGTH
# when True, check password strength level, STRONG(or above) is allowed
USER_STRONG_PASSWORD_REQUIRED = {{ pw_user_strong_password_required }}
{% endif %}

# Set this to seahub website's URL. This URL is contained in email notifications.
SITE_BASE = 'https://{{ server_name }}'
# Set this to your website's name. This is contained in email notifications.
SITE_NAME = '{{ site_name }}'
# Set seahub website's title
SITE_TITLE = '{{ site_title }}'
# If you don't want to run seahub website on your site's root path, set this option to your preferred path.
# e.g. setting it to '/seahub/' would run seahub on http://example.com/seahub/.
SITE_ROOT = '{{ site_root }}'
BRANDING_CSS = '{{ site_custom_css }}'
LOGO_PATH = '{{ site_logo_path }}'
LOGO_URL = '{{ site_logo_url }}'
{% if site_logo_width is defined %}
LOGO_WIDTH = {{ site_logo_width }}
{% endif %}
{% if site_logo_height is defined %}
LOGO_HEIGHT = {{ site_logo_height }}
{% endif %}

# Age of cookie, in seconds (default: 2 weeks).
SESSION_COOKIE_AGE = {{ session_cookie_age }}
# Whether to save the session data on every request.
SESSION_SAVE_EVERY_REQUEST = {{ session_save_every_request }}
# Whether a user's session cookie expires when the Web browser is closed.
SESSION_EXPIRE_AT_BROWSER_CLOSE = {{ session_expire_at_browser_close }}
# Using server side crypto by default, otherwise, let user choose crypto method.
FORCE_SERVER_CRYPTO = {{ session_force_server_crypto }}

{% if use_shibboleth %}
EXTRA_AUTHENTICATION_BACKENDS = (
    'shibboleth.backends.ShibbolethRemoteUserBackend',
)
EXTRA_MIDDLEWARE_CLASSES = (
    'shibboleth.middleware.ShibbolethRemoteUserMiddleware',
)
SHIBBOLETH_ATTRIBUTE_MAP = {
    "eppn": (True, "username"),
    "displayName": (False, "display_name"),
    "givenname": (False, "givenname"),
    "surname": (False, "surname"),
    "emailaddress": (False, "contact_email"),
    "organization": (False, "institution"),
}

ENABLE_SHIB_LOGIN = True
{% if shibboleth_guests %}

SHIBBOLETH_GUESTS = True
SHIBBOLETH_HOST_INST_SUFFIX = '{{ shibboleth_host_inst_suffix }}'
SHIBBOLETH_GUEST_ROLE = '{{ shibboleth_guest_role }}'
{% endif %}
{% endif %}

{% if role_permissions is defined %}
ENABLED_ROLE_PERMISSIONS = {
{% for role, permissions in role_permissions.iteritems() %}
    '{{ role }}': {
{% for perm, allowed in permissions.iteritems() %}
        '{{ perm }}': {{ 'True' if allowed else 'False' }},
{% endfor %}
    },
{% endfor %}
}
{% endif %}

{% if use_logrotate %}
# Logging
import os
LOG_DIR = os.environ.get('SEAHUB_LOG_DIR', '/tmp')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s:%(lineno)s %(funcName)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
         }
     },
    'handlers': {
        'default': {
            'level':'INFO',
            'class':'logging.handlers.WatchedFileHandler',
            'filename': os.path.join(LOG_DIR, 'seahub.log'),
            'formatter':'standard',
        },
        'request_handler': {
            'level':'INFO',
            'class':'logging.handlers.WatchedFileHandler',
            'filename': os.path.join(LOG_DIR, 'seahub_django_request.log'),
            'formatter':'standard',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
{% if admin_error_email_include_html %}
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True
{% else %}
            'class': 'django.utils.log.AdminEmailHandler'
{% endif %}
        }
    },
    'loggers': {
        '': {
            'handlers': ['default'],
            'level': 'INFO',
            'propagate': True
        },
        'django.request': {
            'handlers': ['request_handler', 'mail_admins'],
            'level': 'INFO',
            'propagate': False
        },
    }
}
{% endif %}

{% if admin_error_email is defined %}
ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
{% for admin in admin_error_email %}
    ('{{ admin.name }}', '{{ admin.email }}'),
{% endfor %}
)

MANAGERS = ADMINS
{% endif %}

{% if ping_throttle is defined or anon_throttle is defined or user_throttle is defined %}
# rest_framwork
REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_RATES': {
        'ping': '{{ ping_throttle|default('600/minute') }}',
        'anon': '{{ anon_throttle|default('5/minute') }}',
        'user': '{{ user_throttle|default('300/minute') }}',
    },
}
{% endif %}

{% if ssl_dec_loadbalancer %}
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
{% endif %}

# settings new in 4.2
SERVE_STATIC = False
MEDIA_URL = '/media/'
COMPRESS_URL = MEDIA_URL
STATIC_URL = MEDIA_URL+'assets/'

# settings new in 4.4
SHOW_TRAFFIC = {{ show_traffic }}
SHARE_LINK_PASSWORD_MIN_LENGTH = {{ share_link_password_min_length }}
ENABLE_RESUMABLE_FILEUPLOAD = {{ enable_resumable_fileupload }}

# settings new in 6.0
ENABLE_GUEST_INVITATION = {{ enable_guest_invitation }}
